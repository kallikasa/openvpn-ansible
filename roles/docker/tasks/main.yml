---
- name: Install required packages for Docker
  ansible.builtin.package:
    name:
      - ca-certificates
      - curl
      - gnupg
    state: present
    update_cache: true

- name: Check if Docker is already installed
  ansible.builtin.stat:
    path: /usr/bin/docker
  register: docker_binary

- name: Setup Docker repository (Debian/Ubuntu)
  when: ansible_os_family == 'Debian' and not docker_binary.stat.exists
  block:
    - name: Create keyrings directory
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key
      ansible.builtin.shell: |
        curl -fsSL https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Add Docker repository
      ansible.builtin.shell: |
        echo "deb [arch={{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable" > /etc/apt/sources.list.d/docker.list
      args:
        creates: /etc/apt/sources.list.d/docker.list

    - name: Update apt cache after adding Docker repo
      ansible.builtin.apt:
        update_cache: true

- name: Install Docker packages (Debian/Ubuntu)
  ansible.builtin.package:
    name: "{{ docker_packages }}"
    state: present
  when: ansible_os_family == 'Debian'

- name: Ensure Docker service is enabled and running
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Add current user to docker group (if not root)
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: true
  when: ansible_user_id != 'root'
  failed_when: false

